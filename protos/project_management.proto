syntax = "proto3";

import "google/api/annotations.proto";

service ProjectManagementAPI {
    rpc AddMilestone (AddMilestoneRequest) returns (AddMilestoneResponse) {
        option (google.api.http) = {
            post: "/addmilestone"
            body: "*"
        };
    }

    rpc EditMilestone (EditMilestoneRequest) returns (EditMilestoneResponse) {
        option (google.api.http) = {
            post: "/editmilestone"
            body: "*"
        };
    }

    rpc DeleteMilestone (DeleteMilestoneRequest) returns (DeleteMilestoneResponse) {
        option (google.api.http) = {
            post: "/deletemilestone"
            body: "*"
        };
    }

    rpc MilestoneCompletion (MilestoneCompletionRequest) returns (MilestoneCompletionResponse) {
        option (google.api.http) = {
            post: "/milestonecompletion"
            body: "*"
        };
    }

    rpc AddUser (AddUserRequest) returns (AddUserResponse) {
        option (google.api.http) = {
            post: "/adduser"
            body: "*"
        };
    }

    rpc RemoveUser (RemoveUserRequest) returns (RemoveUserResponse) {
        option (google.api.http) = {
            post: "/removeuser"
            body: "*"
        };
    }

    rpc RejectUser (RejectUserRequest) returns (RejectUserResponse) {
        option (google.api.http) = {
            post: "/rejectuser"
            body: "*"
        };
    }

    rpc GetProjectMembers (GetProjectMembersRequest) returns (GetProjectMembersResponse) {
        option (google.api.http) = {
            post: "/getprojectmembers"
            body: "*"
        };
    }

    rpc TransferLeader (TransferLeaderRequest) returns (TransferLeaderResponse){
        option (google.api.http) = {
            post: "/transferleader"
            body: "*"
        };
    }

    rpc Announcement (AnnouncementRequest) returns (AnnouncementResponse) {
        option (google.api.http) = {
            post: "/announcement"
            body: "*"
        };
    }

    rpc InviteUser (InviteUserRequest) returns (InviteUserResponse) {
        option (google.api.http) = {
            post: "/inviteuser"
            body: "*"
        };
    }

    rpc AcceptInvitation (AcceptInviteRequest) returns (AcceptInviteResponse) {
        option (google.api.http) = {
            post: "/acceptinvitation"
            body: "*"
        };
    }

    rpc RejectInvitation (RejectInviteRequest) returns (RejectInviteResponse) {
        option (google.api.http) = {
            post: "/rejectinvitation"
            body: "*"
        };
    }

    rpc RemoveNotification (RemoveNotificationRequest) returns (RemoveNotificationResponse) {
        option (google.api.http) = {
            post: "/removenotification"
            body: "*"
        };
    }
}

message MilestoneModel {
    string milestoneid = 1;
    string title = 2;
    string description = 3;
    repeated string users =4;
    int32 weight = 5;
    bool done = 6;
}

message AddMilestoneRequest {
    string xid = 1;
    string title = 2;
    string description = 3;
    repeated string users = 4;
    int32 weight = 5;
}

message AddMilestoneResponse {
    bool success = 1;
}

message EditMilestoneRequest {
    string milestoneid = 1;
    string title = 2;
    string description = 3;
    repeated string users = 4;
    int32 weight = 5;
}

message EditMilestoneResponse {
    bool success = 1;
}

message DeleteMilestoneRequest {
    string xid = 1;
    string milestoneid = 2;                                             
}

message DeleteMilestoneResponse {
    bool success = 1;
}

message MilestoneCompletionRequest {
    string milestoneid = 2;
}

message MilestoneCompletionResponse {
    bool success = 1;
}

message GetProjectMembersRequest {
    string projectid = 1;
    repeated string currentMembers = 2;
}

message GetProjectMembersResponse {
    bool success = 1;
    repeated UserTuple users = 2;
}

message UserTuple {
    string email = 1;
    string firstname = 2;
}

message InviteUserRequest {
    string projectid = 1;
    string receipientemail = 2;
    string senderemail = 3;
}

message InviteUserResponse {
    bool success = 1;
}

message AcceptInviteRequest {
    string email = 1;
    string invite = 2;
    string projectid = 3;
}

message AcceptInviteResponse {
    bool success = 1;
}

message RejectInviteRequest {
    string email = 1;
    string invite = 2;
    string projectid = 3;
}

message RejectInviteResponse {
    bool success = 1;
}

message AddUserRequest {
    string projectid = 1;
    string useremail = 2;
}

message AddUserResponse {
    bool success = 1;
}

message RemoveUserRequest {
    string projectid = 1;
    string useremail = 2;
}

message RemoveUserResponse {
    bool success = 1;
}

message RejectUserRequest {
    string projectid = 1;
    string useremail = 2;
}

message RejectUserResponse {
    bool success = 1;
}

message TransferLeaderRequest {
    string projectid = 1;
    string newleader = 2;
}

message TransferLeaderResponse {
    bool success = 1;
}

message AnnouncementRequest {
    string projectid = 1;
    string poster = 2;
    string message = 3;
    bool pin = 4;
}

message AnnouncementResponse {
    bool success = 1;
}

message RemoveNotificationRequest {
    string notification = 1;
    string user = 2;
}

message RemoveNotificationResponse{
    bool success = 1;
}
